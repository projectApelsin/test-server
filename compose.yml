services:
  app:
    build: .
    env_file: .env
    ports:
      - "${PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: on-failure:3
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: ${DATABASE_URL:-jdbc:postgresql://db:5432/courseplatform}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD:-123456}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver

      # JPA/Hibernate configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${JPA_DDL_AUTO:-update}
      SPRING_JPA_SHOW_SQL: ${JPA_SHOW_SQL:-false}
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect

      # JWT configuration
      JWT_SECRET: ${JWT_SECRET:-supersecretkeydigijedneverbestolenfromme1231fdkaskdfsdkafaskfsadfvjxcnjkzlxsupersecretkeydigijedneverbestolenfromme1231fdkaskdfsdkafaskfsadfvjxcnjkzlx}
      JWT_ACCESS_EXPIRATION_MS: ${JWT_ACCESS_EXPIRATION_MS:-900000}
      JWT_REFRESH_EXPIRATION_MS: ${JWT_REFRESH_EXPIRATION_MS:-604800000}

      # Spring profiles
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}

      # Server configuration
      SERVER_PORT: ${PORT:-8080}

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-courseplatform}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-123456}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_data_course_platform:/var/lib/postgresql/data
      - ./schema-postgresql.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data_course_platform: